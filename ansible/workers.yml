---
- hosts:
  - worker_rhel6
  - worker_rhel7
  - worker_rhel8
  - worker_fedora

  become: yes
  become_method: sudo

  tasks:
  - name: Set up Jenkins user
    user:
      name: jenkins
      comment: "Jenkins user"

  - name: Install prerequisites for authorized keys addition (RHEL6, RHEL7)
    package:
      name:
      - libselinux-python
    when: ansible_distribution == 'RedHat' and (ansible_distribution_version.split(".")[0] == "6" or ansible_distribution_version.split(".")[0] == "7")

  - name: Install prerequisites for authorized keys addition (RHEL8, Fedora)
    package:
      name:
      - python3-libselinux
    when: (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8") or ansible_distribution == 'Fedora'

  # we use the public key to connect to slaves from jenkins master
  - name: Authorize master's jenkins user public key
    authorized_key:
      user: jenkins
      key: "{{ lookup('file', 'generated_bits/master_id_rsa.pub') }}"
      exclusive: yes  # only need one key for "jenkins" user, users can still connect as ec2-user
      state: present

  - name: Ensure general Jenkins dependencies are installed
    package:
      name:
        - java

  - name: Add the EPEL 7 repository
    yum_repository:
      name: epel
      description: Extra Packages for Enterprise Linux 7 - $basearch
      gpgcheck: yes
      gpgkey: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7Server
      mirrorlist: https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7"

  - name: Add the EPEL 6 repository
    yum_repository:
      name: epel
      description: Extra Packages for Enterprise Linux 6 - $basearch
      gpgcheck: yes
      gpgkey: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6Server
      mirrorlist: https://mirrors.fedoraproject.org/metalink?repo=epel-6&arch=$basearch
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "6"

  - name: Add the Red Hat CodeReady Linux Builder for RHEL 8 x86_64
    rhsm_repository:
      name: codeready-builder-for-rhel-8-x86_64-rpms
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"

  - name: Add the Red Hat Ansible Engine 2 for RHEL 8 x86_64
    rhsm_repository:
      name: ansible-2-for-rhel-8-x86_64-rpms
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"

  - name: Ensure general build dependencies are installed
    package:
      name:
      - autoconf
      - automake
      - libtool
      - doxygen
      - git
      - rubygems
      - gawk
      - gcc
      - make
      state: installed

  - name: Ensure ccache is installed (except RHEL 8)
    package:
      name:
      - ccache
      state: installed
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] != "8"

  - name: Ensure OpenSCAP has asciidoctor installed
    gem:
      name: asciidoctor
      user_install: no # let's install it everywhere

  - name: Ensure ninja-build is installed if applicable (except RHEL6)
    package:
      name:
      - ninja-build # for faster PR build
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] >= "7"

  - name: Copy ccache.conf over
    copy:
      src: shared_cfg/ccache.conf
      dest: /etc/ccache.conf

  - name: Ensure OpenSCAP dependencies are installed
    package:
      name:
      - dbus-devel
      - libacl-devel
      - libblkid-devel
      - libcap-devel
      - libcurl-devel
      - libgcrypt-devel
      - libselinux-devel
      - libxml2-devel
      - libxslt-devel
      - openldap-devel
      - pcre-devel
      - perl-XML-Parser
      - perl-XML-XPath
      - perl-devel
      - rpm-devel
      - swig
      - bzip2-devel
      - GConf2-devel
      - sendmail  # the openscap OVAL mitre requires sendmail to complete
      - wget
      - lua
      - which
      - initscripts
      - chkconfig
      - libyaml-devel
      state: installed

  - name: Ensure OpenSCAP dependencies are installed (Except RHEL8)
    package:
      name:
      - python-devel
      state: installed
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] != "8"

  - name: Ensure OpenSCAP dependencies are installed (RHEL8 only)
    package:
      name:
      - python3-devel
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"

  - name: Ensure procps is installed (OpenSCAP dependency) (RHEL6 only)
    package:
      name:
      - procps
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] <= "6"

  - name: Ensure procps-ng is installed (OpenSCAP dependency) (Except RHEL6)
    package:
      name:
      - procps-ng
      state: installed
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] >= "7"

  - name: Ensure OpenSCAP dependencies are running
    service:
      name: sendmail
      enabled: yes
      state: started

  - name: Ensure SCAP Workbench dependencies are installed
    package:
      name:
      - cmake
      - gcc-c++
      - openssh-clients
      - util-linux
      - openscap-devel
      - polkit
      - asciidoc
      state: installed

  - name: Ensure SCAP Workbench dependencies are installed (except RHEL8)
    package:
      name:
      - qt-devel
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] != "8"

  - name: Ensure Qt5 is installed (except RHEL6, SCAP Workbench dependency)
    package:
      name:
      - qt5-qtbase-devel
      - qt5-qtxmlpatterns-devel
      state: installed
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] >= "7"

  - name: Ensure SCAP Security Guide dependencies are installed
    package:
      name:
      - cmake
      - openscap-utils
      - wget  # needed for the NIST test suite for SSG
      - ansible  # needed for ansible role syntax check
      state: installed

  - name: Ensure SCAP Security Guide dependencies are installed (Fedora only)
    package:
      name:
      - python2-jinja2  # needed for the new SSG yaml/jinja2 port
      - python2-pytest
      - python3-pytest  # needed for unit tests + coverage
      - python3-jinja2
      - python3-PyYAML
      - bats
      state: installed
    when: ansible_distribution == 'Fedora'

  - name: Ensure that there is no Python2 on the system (Fedora only)
    package:
      name:
      - python2
      state: absent
    when: ansible_distribution == 'Fedora' and False  # We don't really want to remove it as long as linkchecker is python2-only.

  - name: Ensure SCAP Security Guide dependencies are installed (RHEL7 only)
    package:
      name:
      - python-jinja2  # needed for the new SSG yaml/jinja2 port
      - python2-pip  # needed for the linkchecker/pytest
      - PyYAML  # needed for the new SSG yaml port
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7"

  - name: Ensure SCAP Security Guide dependencies are installed (RHEL6 only)
    package:
      name:
      - python-jinja2  # needed for the new SSG yaml/jinja2 port
      - python-pip  # needed for the linkchecker/pytest
      - PyYAML  # needed for the new SSG yaml port
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "6"

  - name: Ensure SCAP Security Guide dependencies are installed (RHEL8 only)
    package:
      name:
      - python3-pytest  # needed for unit tests + coverage
      - python3-jinja2
      - python3-PyYAML
      - python3-pip
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"

  # this is the only common way across rhel/fedora.
  # It's url-based, because original project is dead, and fork is not established yet
  - name: Ensure linkchecker is installed for SCAP Security Guide checking
    pip:
      name:
      - git+https://github.com/linkcheck/linkchecker.git

  # RHEL may not have pytest
  - name: Ensure pytest coverage support is installed (RHEL only)
    pip:
      name:
      - pytest
    when: ansible_distribution == 'RedHat'

  - name: Ensure json2html is installed so it can convert profile statistics to HTML
    pip:
      name:
      - json2html
    when: ansible_distribution == 'Fedora'

  - name: Ensure lint tools are installed (except RHEL6)
    pip:
      name:
      - ansible-lint
      - yamllint
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] >= "7"

  - name: Ensure OpenSCAP Daemon dependencies are installed (RHEL7 only)
    package:
      name:
      - dbus-python
      - gobject-introspection
      - pygobject2-devel
      state: installed
    when: ansible_distribution != 'RedHat' or ansible_distribution_version.split(".")[0] == "7"

  - name: Ensure OpenSCAP Daemon extra dependencies are installed (Fedora only)
    package:
      name:
      - python-gobject-base
      - python-gobject
      - python3-dbus
      - pygobject3-devel
      - python3-gobject-base
      - python3-gobject
      state: installed
    when: ansible_distribution == 'Fedora'

  - name: Ensure OpenSCAP Daemon extra dependencies are installed (RHEL8 only)
    package:
      name:
      - python3-dbus
      - pygobject3-devel
      - python3-gobject-base
      - python3-gobject
      state: installed
    when: ansible_distribution == 'Fedora' or (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8")

  - name: Ensure OSCAP Anaconda dependencies are installed (RHEL7 only)
    package:
      name:
      - openscap-python
      - anaconda
      - python2-mock
      - python-nose
      - python-cpio
      - zanata-python-client
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7"

  - name: Ensure OpenSCAP Anaconda dependencies are installed (Fedora and RHEL8 only)
    package:
      name:
      - openscap-python3
      - anaconda
      - python3-devel
      - python3-mock
      - python3-nose
      - python3-cpio
      - python3-pycurl
      - python3-kickstart
      state: installed
    when: ansible_distribution == 'Fedora' or (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8")

  - name: Ensure Zanata is installed (Fedora only)
    package:
      name:
      - zanata-python-client
      state: installed
    when: ansible_distribution == 'Fedora'

  - name: Create directory for SCAPVal tool (RHEL7 and Fedora only)
    file:
      path: /opt/scapval
      state: directory
    when: (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7") or ansible_distribution == 'Fedora'

  - name: Download SCAPVal tool (RHEL7 and Fedora only)
    get_url:
      url: https://csrc.nist.gov/CSRC/media/Projects/Security-Content-Automation-Protocol/tools/scap/1.3/SCAP-Content-Validation-Tool-1.3.2.zip
      dest: /tmp
    when: (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7") or ansible_distribution == 'Fedora'

  - name: Extract SCAPVal tool (RHEL7 and Fedora only)
    unarchive:
      src: /tmp/SCAP-Content-Validation-Tool-1.3.2.zip
      dest: /opt/scapval/
      remote_src: yes
    when: (ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "7") or ansible_distribution == 'Fedora'

  # Taken from https://stackoverflow.com/questions/33359404/ansible-best-practice-for-maintaining-list-of-sudoers
  - name: Allow jenkins to call setcap
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^jenkins'
      line: 'jenkins ALL=(ALL)       NOPASSWD: /sbin/setcap'
      validate: visudo -cf %s
